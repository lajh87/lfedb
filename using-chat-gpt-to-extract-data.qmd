# Using Chat GPT to Extract Data


## View File

```{r}
txt_in <- readLines("data-raw/naompss/naomprss_2006_105_110.md") |>
  paste(collapse ="\n") 
yaml_loc <- stringr::str_locate_all(txt_in, "---")[[1]][1:2,]
meta <- substr(txt_in, yaml_loc[1, "start"], yaml_loc[2, "end"]) |>
  yaml::yaml.load()

md <- substr(txt_in, yaml_loc[2, "end"]+1, nchar(txt_in)) 
```

### Yaml

```{r}
meta |>
  dplyr::as_tibble()
```

### Markdown

```{r, results='asis'}
cat(md)
```

## Sections

```{r}
md_lines <- md |>
  stringr::str_split("\n") |>
  purrr::pluck(1)

section_f <- md_lines |>
  stringr::str_detect("^#")

title <- md_lines[section_f]

sections_tbl <- dplyr::tibble(title, from = which(section_f)) |>
  dplyr::mutate(to = dplyr::lead(from)-1) |>
  tidyr::replace_na(list(to = length(md_lines)))

sections_tbl$nchar <- purrr::pmap_int(sections_tbl, function(from, to, ...){
  nchar(paste(md_lines[from:to], collapse = "\n"))
})

sections_tbl |>
  dplyr::slice(2) 

```

```{r, results='asis'}
section_md <- paste(md_lines[18:25], collapse = "\n")
cat(section_md)
```

```{r}

library(httr)
key <- Sys.getenv("OPENAI_API_KEY")

body <- list(model = "gpt-3.5-turbo",
   messages = list(list(
     role = "user",
     content = glue::glue("list the issues identified in the following text: {section_md}")
     )),
     temperature = 0.7) |>
jsonlite::toJSON(auto_unbox = TRUE)

resp <- POST(url = "https://api.openai.com/v1/chat/completions",
     add_headers(`Content-Type` = "application/json",
                   Authorization = glue::glue("Bearer {key}")),
     body = body)



content(resp)
```
